step 1 : start
step 2 : declare a Map collection object map, with both key and value datatype as String
step 3 : Add some value in (String,String) format using map.put()
step4 : declare TreeMap collection object treeMap with type<Integer,String>
step5 : for Map.Entry<String,String> object e in map.entrySet(), perform the following 6 & 7 
step6 : Convert e.key() to integer
step7 : add key & e.getValue() to treeMap using treeMap.put()
step8 : Print  the value of treeMap object 
step9 : Stop

program1
step 1 : Start
step 2 : Declare a HashSet collection hashSet with Integer as element type
step 3 : Perform step 4,5,6 & 7 using menu
step 4 : Read an element and add to collection using hashSet.add()
step 5 : for Integer i in hashSet print i
step 6 : Check emptiness of hashSet using hashSet.isEmpty() 
step 7 : Print length of hashSet using hashSet.size() 
step 8 : Stop


program2
step 1 : Start
step 2 : Declare a TreeSet<Integer> collection object treeSet
step 3 : Add some integer to treeSet using add() fn
step 4 : for int i in treeSet.descendingSet() perform step5
step 5 : Print value of i
step 6 : Stop


program3
Step 1 : Start
Step 2 : Declare a LinkedHashSet linkedHashSet with String as object type
Step 3 : Add Strings to linkedHashSet using add() fn
Step 4 : Display linkedHashSet
Step 5 : Stop

program4
Step 1 : Start
Step 2 : Declare a ArrayList names with with String as object type
Step 3 : Add some String values to "names" using add() fn
Step 4 : Display a menu to perform the following steps 5,6,7,8 & 9
Step 5 : Read index value and name from user, then add to names using add(index,name)
Step 6 : Read name from user and print its position using indexOf(name) fn
Step 7 : Print the size of ArrayList "names" using size() fn
step 8 : Check emptiness of names using isEmpty() 
Step 9 : Remove name in names by reading index value from user, using remove(index)
Step 10 : Stop

program5
Step 1 : Start
Step 2 : Define a Class linkedlist prgrm
Step 3 : Create an Arrayhist of string type called "fruits".
step 4 : Add elements into Arraylist using add() method.
step 5 : Declare a linkedhist ("fruit-list) object with parameter 'fruits' 
Step 6 : Display the Linkedlist elements
step 7 : Delete all elements in linkedlist using clear() method.
Step 8 : Display the linked list after removing all elements
step 9 : Stop

program6
Step 1 : Start
step 2 : Define a Create class Stackprym & stack object "numbers"
step 3 : Add elements into stack object using push().
step 4 : Print the shot elements 
Step 5 : Accept position of object to be deleted from user
Step 6 : use remove() method of stack to remove element of (position -1).
Step 7 : Display the removed element
step 8 : Print the list of elements after deletion
Step 9 : Stop

program7
step 1 : Start
Slep 2 : Define a class PriorityQueue prgrm
Step 3 : Create an object 'art' of Priority Queue of string type
Step 4 : Add elements into priority queue using add() method.
step 5 : Define the iterator to i for priority queue to iterate through the prionty queue & display its elements.
step 6 : Stop.